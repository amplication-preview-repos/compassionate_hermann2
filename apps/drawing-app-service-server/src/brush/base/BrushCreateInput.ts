/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsInt,
  Min,
  Max,
  IsOptional,
  IsString,
  MaxLength,
  IsEnum,
  ValidateNested,
} from "class-validator";
import { EnumBrushTypeField } from "./EnumBrushTypeField";
import { StrokeCreateNestedManyWithoutBrushesInput } from "./StrokeCreateNestedManyWithoutBrushesInput";
import { Type } from "class-transformer";
import { EnumBrushBrushStyle } from "./EnumBrushBrushStyle";
import { EnumBrushBrushVariant } from "./EnumBrushBrushVariant";

@InputType()
class BrushCreateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  size?: number | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  color?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumBrushTypeField,
  })
  @IsEnum(EnumBrushTypeField)
  @IsOptional()
  @Field(() => EnumBrushTypeField, {
    nullable: true,
  })
  typeField?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => StrokeCreateNestedManyWithoutBrushesInput,
  })
  @ValidateNested()
  @Type(() => StrokeCreateNestedManyWithoutBrushesInput)
  @IsOptional()
  @Field(() => StrokeCreateNestedManyWithoutBrushesInput, {
    nullable: true,
  })
  strokes?: StrokeCreateNestedManyWithoutBrushesInput;

  @ApiProperty({
    required: false,
    enum: EnumBrushBrushStyle,
  })
  @IsEnum(EnumBrushBrushStyle)
  @IsOptional()
  @Field(() => EnumBrushBrushStyle, {
    nullable: true,
  })
  brushStyle?: "Option1" | null;

  @ApiProperty({
    required: false,
    enum: EnumBrushBrushVariant,
  })
  @IsEnum(EnumBrushBrushVariant)
  @IsOptional()
  @Field(() => EnumBrushBrushVariant, {
    nullable: true,
  })
  brushVariant?: "Option1" | null;
}

export { BrushCreateInput as BrushCreateInput };
