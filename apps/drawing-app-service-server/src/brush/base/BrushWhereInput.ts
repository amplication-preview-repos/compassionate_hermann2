/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, IsEnum, ValidateNested } from "class-validator";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { EnumBrushTypeField } from "./EnumBrushTypeField";
import { StrokeListRelationFilter } from "../../stroke/base/StrokeListRelationFilter";
import { EnumBrushBrushStyle } from "./EnumBrushBrushStyle";
import { EnumBrushBrushVariant } from "./EnumBrushBrushVariant";

@InputType()
class BrushWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  size?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  color?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  name?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumBrushTypeField,
  })
  @IsEnum(EnumBrushTypeField)
  @IsOptional()
  @Field(() => EnumBrushTypeField, {
    nullable: true,
  })
  typeField?: "Option1";

  @ApiProperty({
    required: false,
    type: () => StrokeListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StrokeListRelationFilter)
  @IsOptional()
  @Field(() => StrokeListRelationFilter, {
    nullable: true,
  })
  strokes?: StrokeListRelationFilter;

  @ApiProperty({
    required: false,
    enum: EnumBrushBrushStyle,
  })
  @IsEnum(EnumBrushBrushStyle)
  @IsOptional()
  @Field(() => EnumBrushBrushStyle, {
    nullable: true,
  })
  brushStyle?: "Option1";

  @ApiProperty({
    required: false,
    enum: EnumBrushBrushVariant,
  })
  @IsEnum(EnumBrushBrushVariant)
  @IsOptional()
  @Field(() => EnumBrushBrushVariant, {
    nullable: true,
  })
  brushVariant?: "Option1";
}

export { BrushWhereInput as BrushWhereInput };
